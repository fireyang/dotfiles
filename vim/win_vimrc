
"判断系统是否具有“自动命令”（autocmd）的支持
if has('autocmd')
"清除所有的自动命令，以方便调试

au!
"对于后缀为“.asm”的文件，认为其是微软的 Macro Assembler 格式
"autocmd FileType ruby,eruby set omnifunc=rubycomplete#Complete
endif

set nocompatible    " be iMproved
filetype off        " required!
"set rtp +=~/.vim/bundle/vundle/
"call vundle#rc()
set rtp+=$VIM/vimfiles/bundle/Vundle.vim 
call vundle#begin()  

"set encoding=utf-8
set fileencodings=utf-8
"filetype plugin indent on
syntax on
"设置行
set nu
"换行
"设置缩进
set sw=4
set ts=4
set softtabstop=4
set tabstop=4
set expandtab
set cursorline
set smartindent "根据当前行的缩进，预测下一行的缩进
set nocompatible  "使得vim避免了原始vi的一些漏洞和限制
set autoindent      "使用你当前行的缩进来设置你下一行的缩进
set showcmd                   " display an incomplete command in statusline

"在输入命令时列出匹配项目，也就是截图底部的效果
set wildmenu

"打开自动缩,继承前一行的缩进注释 进
set autoindent
"默认情况下手动折叠
set foldmethod=manual
"取消高亮
map <leader>r :noh<cr>

"配色方案
colorscheme desert
"colorscheme murphy 
"colorscheme solarized
"colorscheme tango
"使用空格代替tab
set et

"set guifont=Courier_New:h16:cANSI
"set guifontwide=YaHei\ Consolas\ Hybrid:h16
"set guifont=Bitstream\ Vera\ Sans\ Mono\ 15 
set guifont=Monaco:h13

" 不要生成swap文件
set noswapfile
"隐藏菜单栏
set guioptions-=m
"隐藏工具栏
set guioptions-=T
"set mapleader
let mapleader = ","
let g:snips_author = 'FireYang'
" ESC
noremap <leader><leader> <Esc>


" copy filename 
map <silent> <leader>. :let @+=expand('%:p').':'.line('.')<CR>
" copy path
map <silent> <leader>/ :let @+=expand('%:p:h')<CR>

Plugin 'gmarik/Vundle.vim'

"BufExplorer 插件{{{
Plugin 'bufexplorer.zip'
" Close the current buffer
map <leader>bd :Bclose<cr>
"切换下一缓存区文件
map <leader>bn :bn<cr>
"切换上一缓存区文件
map <leader>bp :bp<cr>
" Close all the buffers
map <leader>ba :1,300 bd!<cr>
" When pressing <leader>cd switch to the directory of the open buffer
map <leader>cd :cd %:p:h<cr>

" NERDTree插件的快捷键
Plugin 'scrooloose/nerdtree'
imap <silent> <F7> <esc>:NERDTreeToggle<CR>
nmap <silent> <F7> :NERDTreeToggle<CR>
" bufkill bd's: really do not mess with NERDTree buffer
nnoremap <silent> <backspace> :BD<cr>
nnoremap <silent> <s-backspace> :BD!<cr>

" Prevent :bd inside NERDTree buffer
au FileType nerdtree cnoreabbrev <buffer> bd <nop>
au FileType nerdtree cnoreabbrev <buffer> BD <nop>
"NERDTree过滤文件
let NERDTreeIgnore=['\.svn$','.fla$','.doc$','.swc$']
"NERDTree标签文件目录
"let NERDTreeBookmarksFile='/Users/fireyang/soft/MacVim-7_3-53/NerdBookmarks.txt'
"let NERDTreeBookmarksFile='d:/Users/fireyang/soft/MacVim-7_3-53/NerdBookmarks.txt'
" }}}


" 窗口区域切换,F5 后 ↑↓←→  来切换
"imap <silent> <C-h> <esc><C-W><left>
vmap <silent> <C-h> <esc><C-W><left>
nmap <silent> <C-h> <C-W><left>
"imap <silent> <C-l> <esc><C-W><right>
vmap <silent> <C-l> <esc><C-W><right>
nmap <silent> <C-l> <C-W><right>
"imap <silent> <C-k> <esc><C-W><up>
vmap <silent> <C-k> <esc><C-W><up>
nmap <silent> <C-k> <C-W><up>
"imap <silent> <C-j> <esc><C-W><down>
vmap <silent> <C-j> <esc><C-W><down>
nmap <silent> <C-j> <C-W><down>

inoremap <C-z> <C-O>u
nnoremap <C-z> u    
" ctrl + y
"inoremap <C-y> <C-O><C-R>
"nnoremap <C-y> <C-R>
" ctrl + v
nnoremap <C-b> "+gP
inoremap <C-b> <C-O>"+gP
" ctrl + f
imap <C-f> <esc>:/
nmap <C-f> :/
" ctrl + r
imap <A-r> <esc>:%s/
vmap <A-r> <esc>:%s/
nmap <A-r> :%s/
" ctrl + o
imap <C-o> <C-O>:e
vmap <C-o> <esc>:e
nmap <C-o> :e 
"}}}

if version >603
set helplang=cn
set cmdheight=2
endi

"切换窗体，并最大化
"map <C-J> <C-W>j<C-W>_
"map <C-K> <C-W>k<C-W>_
"设置状态
set laststatus=2
"设置命令行2行
set cmdheight=2
"设置缓存
set nobackup
set ai
set lbr
set hls
"set no wrap
set nowrap


"customer hotkey===============================


"Insert now date
"map <F3> :echo strftime("%Y-%m-%d %a %I:%M %p")<cr>

" QuickClose
map <leader>u :ZoomWin<cr>
map <leader><leader>u :close<cr>
" VSplit
map <leader>vs :vsplit<cr><C-l>
" Tab configuration
map <leader>tn :tabnew %<cr>
map <leader>te :tabedit 
map <leader>tc :tabclose<cr>
map <leader>tm :tabmove
map <leader>tl :tabN<cr>
map <leader>th :tabp<cr>
" Fast editing of the .vimrc
"map <leader>e :e! $HOME/.vimrc<cr>
"edit vimrc file
map <leader>e :exec "edit" '$VIM/win_vimrc'<cr>
" fast saving 
map <leader>w :w<cr>
map <leader>q :q<cr>

""""""""""""""""""""""""""""""
" => Vim grep
""""""""""""""""""""""""""""""
let Grep_Skip_Dirs = 'RCS CVS SCCS .svn generated'
set grepprg=/bin/grep\ -n

"switch to current directory 
"切换到当前文件目录
map <leader>cd :cd %:p:h<CR>  


" FuzzyFinder
"Plugin 'L9'
"Plugin 'FuzzyFinder'
" FuF customisations "{{{
let g:fuf_modesDisable = []
"nnoremap <leader>h :FufHelp<CR>
nnoremap <leader>1  :FufLine<CR>
"备份
"nnoremap <leader>1  :FufTag<CR>
"nnoremap <leader>2  :FufFileWithCurrentBufferDir<CR>
"nnoremap <leader>@  :FufFile<CR>
nnoremap <leader>2  :FufBuffer<CR>
"nnoremap <leader>4  :FufDirWithCurrentBufferDir<CR>
"nnoremap <leader>$  :FufDir<CR>
"nnoremap <leader>5  :FufChangeList<CR>
"nnoremap <leader>6  :FufMruFile<CR>
"nnoremap <leader>7  :FufLine<CR>
"nnoremap <leader>9  :FufTaggedFile<CR>
"   }}}



"javascript {{{
"Plugin 'pangloss/vim-javascript'
"Plugin 'jQuery'
" }}}

" syntastic {{{
Plugin 'scrooloose/syntastic'
" }}}


"snipmate {{{
"Plugin 'msanders/snipmate.vim'
"Plugin 'jamescarr/snipmate-nodejs'
" }}}

"erlang {{{
"Plugin 'jimenezrick/vimerl'
":let erlang_skel_header = {"author": "FireYang", "owner" : "FireYang", "year"  : "2014"}
" }}}

"vim-markdown {{{
Plugin 'plasticboy/vim-markdown'
" }}}


"Solarized color{{{
"Plugin 'Solarized'
" }}}

"golang  {{{
"Plugin 'jnwhiteh/vim-golang'
"Plugin 'Blackrush/vim-gocode'
"}}}

"Plugin 'unite.vim'
"Plugin 'tpope/vim-surround'
"Plugin 'scrooloose/nerdcommenter'
"Plugin 'oblitum/bufkill'
Plugin 'Lokaltog/vim-powerline'
Plugin 'uarun/vim-protobuf'
"Plugin 'ack.vim'
"set auto open Winmanager 
"gist.vim{{{
"Plugin 'mattn/gist-vim'
"Shortcuts for Git actions
"nnoremap <F3> :Gstatus<CR>
"nnoremap <F4> :Gcommit<CR>
"}}}
"Plugin 'myhere/vim-nodejs-complete'
"support jade
"Plugin 'jade.vim'


"Ctrlp.vim{{{
Plugin 'kien/ctrlp.vim'
map <silent> <leader>1 :CtrlP<CR>
map <silent> <leader>2 :CtrlPBuffer<CR>
"过滤文件
set wildignore+=set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.exe
"let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$'
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/]\.(git|hg|svn)$',
  \ 'file': '\v\.(exe|so|dll)$',
  \ 'link': 'some_bad_symbolic_links',
  \ }

" }}}

"neocomplcache 自动补全{{{
"Plugin 'neocomplcache'
" }}}



call vundle#end()
filetype plugin indent on
syntax enable

"if has('gui_running')
"set background=light
"else
set background=dark
"endif

"colorscheme solarized
"colorscheme murphy 
"中文乱码

cd e:/
